#!/usr/bin/env ruby
require 'pathname'
require 'fileutils'
include FileUtils

# path to your application root.
APP_ROOT = Pathname.new File.expand_path('../../', __FILE__)
APP_NAME = ENV['C9_PROJECT'] || File.basename(APP_ROOT)                          # rails-clone-and-go
APP_CLASS = APP_NAME.gsub('-', '_').split('_').collect!{ |w| w.capitalize }.join # RailsCloneAndGo

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

chdir APP_ROOT do
  # This script is a starting point to setup your application.
  # Add necessary setup steps to this file.

  # puts '== Installing Ruby 2.3.4 =='
  # system `rvm install ruby-2.3.4`
  # system `rvm 2.3.4`

  # puts '== Installing dependencies =='
  # system! 'rvm 2.3.4 do gem install bundler --conservative'
  # system('rvm 2.3.4 do bundle check') || system!('rvm 2.3.4 do bundle install')

  puts '== Updating database yml file =='
  db_yml_path = File.join(APP_ROOT, 'config', 'database.yml')
  IO.write(db_yml_path, File.open(db_yml_path) {|f| f.read.gsub(/hyperloop_/, "#{APP_NAME}_")})
  IO.write(db_yml_path, File.open(db_yml_path) {|f| f.read.gsub(/HYPERLOOP_PRODUCTION_DB_PASSWORD/, "#{APP_NAME.upcase}_PASSWORD")})

  puts "== Updating app name to #{APP_CLASS} =="
  application_path = File.join(APP_ROOT, 'config', 'application.rb')
  IO.write(application_path, File.open(application_path) {|f| f.read.gsub(/HyperloopCloneAndGo/, "#{APP_CLASS}")})

  if ENV['C9_PROJECT']
    puts "== Updating Hot Reloader Settings =="
    application_path = File.join(APP_ROOT, 'app', 'assets', 'javascripts', 'application.js')
    IO.write(application_path, File.open(application_path) {|f| f.read.gsub(/\$listen\(\)/, '$listen(8081, false, 1)')})
  else
    puts "== Updating Procfile ports =="
    application_path = File.join(APP_ROOT, 'Procfile')
    IO.write(application_path, File.open(application_path) {|f| f.read.gsub(/ -p 808\d/, '')})
  end

  puts '== Initializing the DB =='
  if ENV['C9_PROJECT'] && `mysql-ctl status 2>&1` =~ /stopped/
    puts "********* starting mysql **********"
    `mysql-ctl start`
  end
  system('rvm 2.3.4 do bundle exec rails db:create')
  if system('rvm 2.3.4 do bundle exec rake environment')
    puts "\n\n\e[33m"
    puts "*********************************************************************************\n\n"
    puts "To finish installation switch to ruby 2.3.4 by doing an 'rvm use 2.3.4'\n"
    puts "*********************************************************************************\n\n"
  else
    puts "\n\n\e[33m"
    puts "*********************************************************************************\n\n"
    puts "Failed to create your DB.  Make sure MySql is installed and running.\n"
    puts "To finish installation switch to ruby 2.3.4 by doing an 'rvm use 2.3.4'\n"
    puts "Then do a 'bundle exec rails db:create'"
    puts "*********************************************************************************\n\n"
  end
end
